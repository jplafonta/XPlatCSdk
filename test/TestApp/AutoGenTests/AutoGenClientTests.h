#pragma once

#include "TestCase.h"
#include <playfab/PlayFabGlobal.h>
#include <playfab/PlayFabEntity.h>
#include <playfab/PlayFabClientDataModels.h>
#include "../../../code/source/Client/ClientDataModels.h"

namespace PlayFabUnit
{

class AutoGenClientTests : public PlayFabApiTestCase
{
private: 
    static void Log(std::stringstream& ss);
    static HRESULT LogHR(HRESULT hr);
    void TestClientAcceptTrade(TestContext& testContext); 
    void TestClientAddFriend(TestContext& testContext); 
    void TestClientAddGenericID(TestContext& testContext); 
    void TestClientAddOrUpdateContactEmail(TestContext& testContext); 
    void TestClientAddSharedGroupMembers(TestContext& testContext); 
    void TestClientAddUsernamePassword(TestContext& testContext); 
    void TestClientAddUserVirtualCurrency(TestContext& testContext); 
    void TestClientAndroidDevicePushNotificationRegistration(TestContext& testContext); 
    void TestClientAttributeInstall(TestContext& testContext); 
    void TestClientCancelTrade(TestContext& testContext); 
    void TestClientConfirmPurchase(TestContext& testContext); 
    void TestClientConsumeItem(TestContext& testContext); 
    void TestClientConsumeMicrosoftStoreEntitlements(TestContext& testContext); 
    void TestClientConsumePS5Entitlements(TestContext& testContext); 
    void TestClientConsumePSNEntitlements(TestContext& testContext); 
    void TestClientConsumeXboxEntitlements(TestContext& testContext); 
    void TestClientCreateSharedGroup(TestContext& testContext); 
    void TestClientExecuteCloudScript(TestContext& testContext); 
    void TestClientGetAccountInfo(TestContext& testContext); 
    void TestClientGetAdPlacements(TestContext& testContext); 
    void TestClientGetAllUsersCharacters(TestContext& testContext); 
    void TestClientGetCatalogItems(TestContext& testContext); 
    void TestClientGetCharacterData(TestContext& testContext); 
    void TestClientGetCharacterInventory(TestContext& testContext); 
    void TestClientGetCharacterLeaderboard(TestContext& testContext); 
    void TestClientGetCharacterReadOnlyData(TestContext& testContext); 
    void TestClientGetCharacterStatistics(TestContext& testContext); 
    void TestClientGetContentDownloadUrl(TestContext& testContext); 
    void TestClientGetCurrentGames(TestContext& testContext); 
    void TestClientGetFriendLeaderboard(TestContext& testContext); 
    void TestClientGetFriendLeaderboardAroundPlayer(TestContext& testContext); 
    void TestClientGetFriendsList(TestContext& testContext); 
    void TestClientGetGameServerRegions(TestContext& testContext); 
    void TestClientGetLeaderboard(TestContext& testContext); 
    void TestClientGetLeaderboardAroundCharacter(TestContext& testContext); 
    void TestClientGetLeaderboardAroundPlayer(TestContext& testContext); 
    void TestClientGetLeaderboardForUserCharacters(TestContext& testContext); 
    void TestClientGetPaymentToken(TestContext& testContext); 
    void TestClientGetPhotonAuthenticationToken(TestContext& testContext); 
    void TestClientGetPlayerCombinedInfo(TestContext& testContext); 
    void TestClientGetPlayerProfile(TestContext& testContext); 
    void TestClientGetPlayerSegments(TestContext& testContext); 
    void TestClientGetPlayerStatistics(TestContext& testContext); 
    void TestClientGetPlayerStatisticVersions(TestContext& testContext); 
    void TestClientGetPlayerTags(TestContext& testContext); 
    void TestClientGetPlayerTrades(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromFacebookIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromFacebookInstantGamesIds(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromGameCenterIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromGenericIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromGoogleIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromKongregateIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromNintendoSwitchDeviceIds(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromPSNAccountIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromSteamIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromTwitchIDs(TestContext& testContext); 
    void TestClientGetPlayFabIDsFromXboxLiveIDs(TestContext& testContext); 
    void TestClientGetPublisherData(TestContext& testContext); 
    void TestClientGetPurchase(TestContext& testContext); 
    void TestClientGetSharedGroupData(TestContext& testContext); 
    void TestClientGetStoreItems(TestContext& testContext); 
    void TestClientGetTime(TestContext& testContext); 
    void TestClientGetTitleData(TestContext& testContext); 
    void TestClientGetTitleNews(TestContext& testContext); 
    void TestClientGetTitlePublicKey(TestContext& testContext); 
    void TestClientGetTradeStatus(TestContext& testContext); 
    void TestClientGetUserData(TestContext& testContext); 
    void TestClientGetUserInventory(TestContext& testContext); 
    void TestClientGetUserPublisherData(TestContext& testContext); 
    void TestClientGetUserPublisherReadOnlyData(TestContext& testContext); 
    void TestClientGetUserReadOnlyData(TestContext& testContext); 
    void TestClientGrantCharacterToUser(TestContext& testContext); 
    void TestClientLinkAndroidDeviceID(TestContext& testContext); 
    void TestClientLinkApple(TestContext& testContext); 
    void TestClientLinkCustomID(TestContext& testContext); 
    void TestClientLinkFacebookAccount(TestContext& testContext); 
    void TestClientLinkFacebookInstantGamesId(TestContext& testContext); 
    void TestClientLinkGameCenterAccount(TestContext& testContext); 
    void TestClientLinkGoogleAccount(TestContext& testContext); 
    void TestClientLinkIOSDeviceID(TestContext& testContext); 
    void TestClientLinkKongregate(TestContext& testContext); 
    void TestClientLinkNintendoServiceAccount(TestContext& testContext); 
    void TestClientLinkNintendoSwitchDeviceId(TestContext& testContext); 
    void TestClientLinkOpenIdConnect(TestContext& testContext); 
    void TestClientLinkPSNAccount(TestContext& testContext); 
    void TestClientLinkSteamAccount(TestContext& testContext); 
    void TestClientLinkTwitch(TestContext& testContext); 
    void TestClientLinkXboxAccount(TestContext& testContext); 
    void TestClientMatchmake(TestContext& testContext); 
    void TestClientOpenTrade(TestContext& testContext); 
    void TestClientPayForPurchase(TestContext& testContext); 
    void TestClientPurchaseItem(TestContext& testContext); 
    void TestClientRedeemCoupon(TestContext& testContext); 
    void TestClientRefreshPSNAuthToken(TestContext& testContext); 
    void TestClientRegisterForIOSPushNotification(TestContext& testContext); 
    void TestClientRemoveContactEmail(TestContext& testContext); 
    void TestClientRemoveFriend(TestContext& testContext); 
    void TestClientRemoveGenericID(TestContext& testContext); 
    void TestClientRemoveSharedGroupMembers(TestContext& testContext); 
    void TestClientReportAdActivity(TestContext& testContext); 
    void TestClientReportDeviceInfo(TestContext& testContext); 
    void TestClientReportPlayer(TestContext& testContext); 
    void TestClientRestoreIOSPurchases(TestContext& testContext); 
    void TestClientRewardAdActivity(TestContext& testContext); 
    void TestClientSendAccountRecoveryEmail(TestContext& testContext); 
    void TestClientSetFriendTags(TestContext& testContext); 
    void TestClientSetPlayerSecret(TestContext& testContext); 
    void TestClientStartGame(TestContext& testContext); 
    void TestClientStartPurchase(TestContext& testContext); 
    void TestClientSubtractUserVirtualCurrency(TestContext& testContext); 
    void TestClientUnlinkAndroidDeviceID(TestContext& testContext); 
    void TestClientUnlinkApple(TestContext& testContext); 
    void TestClientUnlinkCustomID(TestContext& testContext); 
    void TestClientUnlinkFacebookAccount(TestContext& testContext); 
    void TestClientUnlinkFacebookInstantGamesId(TestContext& testContext); 
    void TestClientUnlinkGameCenterAccount(TestContext& testContext); 
    void TestClientUnlinkGoogleAccount(TestContext& testContext); 
    void TestClientUnlinkIOSDeviceID(TestContext& testContext); 
    void TestClientUnlinkKongregate(TestContext& testContext); 
    void TestClientUnlinkNintendoServiceAccount(TestContext& testContext); 
    void TestClientUnlinkNintendoSwitchDeviceId(TestContext& testContext); 
    void TestClientUnlinkOpenIdConnect(TestContext& testContext); 
    void TestClientUnlinkPSNAccount(TestContext& testContext); 
    void TestClientUnlinkSteamAccount(TestContext& testContext); 
    void TestClientUnlinkTwitch(TestContext& testContext); 
    void TestClientUnlinkXboxAccount(TestContext& testContext); 
    void TestClientUnlockContainerInstance(TestContext& testContext); 
    void TestClientUnlockContainerItem(TestContext& testContext); 
    void TestClientUpdateAvatarUrl(TestContext& testContext); 
    void TestClientUpdateCharacterData(TestContext& testContext); 
    void TestClientUpdateCharacterStatistics(TestContext& testContext); 
    void TestClientUpdatePlayerStatistics(TestContext& testContext); 
    void TestClientUpdateSharedGroupData(TestContext& testContext); 
    void TestClientUpdateUserData(TestContext& testContext); 
    void TestClientUpdateUserPublisherData(TestContext& testContext); 
    void TestClientUpdateUserTitleDisplayName(TestContext& testContext); 
    void TestClientValidateAmazonIAPReceipt(TestContext& testContext); 
    void TestClientValidateGooglePlayPurchase(TestContext& testContext); 
    void TestClientValidateIOSReceipt(TestContext& testContext); 
    void TestClientValidateWindowsStoreReceipt(TestContext& testContext); 
    void TestClientWriteCharacterEvent(TestContext& testContext); 
    void TestClientWritePlayerEvent(TestContext& testContext); 
    void TestClientWriteTitleEvent(TestContext& testContext); 


protected:
    void AddTests();

    static void LogPlayFabClientAcceptTradeRequest( PlayFab::ClientModels::AcceptTradeRequest* request, const char* testName );
    static void FillPlayFabClientAcceptTradeRequest( PlayFab::ClientModels::AcceptTradeRequest* request );
    static HRESULT LogPlayFabClientAcceptTradeResponse( PlayFabClientAcceptTradeResponse* result );
    static HRESULT ValidatePlayFabClientAcceptTradeResponse( PlayFabClientAcceptTradeResponse* result );
    static void LogPlayFabClientAddFriendRequest( PlayFab::ClientModels::AddFriendRequest* request, const char* testName );
    static void FillPlayFabClientAddFriendRequest( PlayFab::ClientModels::AddFriendRequest* request );
    static HRESULT LogPlayFabClientAddFriendResult( PlayFabClientAddFriendResult* result );
    static HRESULT ValidatePlayFabClientAddFriendResult( PlayFabClientAddFriendResult* result );
    static void LogPlayFabClientAddGenericIDRequest( PlayFab::ClientModels::AddGenericIDRequest* request, const char* testName );
    static void FillPlayFabClientAddGenericIDRequest( PlayFab::ClientModels::AddGenericIDRequest* request );
    static void LogPlayFabClientAddOrUpdateContactEmailRequest( PlayFab::ClientModels::AddOrUpdateContactEmailRequest* request, const char* testName );
    static void FillPlayFabClientAddOrUpdateContactEmailRequest( PlayFab::ClientModels::AddOrUpdateContactEmailRequest* request );
    static void LogPlayFabClientAddSharedGroupMembersRequest( PlayFab::ClientModels::AddSharedGroupMembersRequest* request, const char* testName );
    static void FillPlayFabClientAddSharedGroupMembersRequest( PlayFab::ClientModels::AddSharedGroupMembersRequest* request );
    static void LogPlayFabClientAddUsernamePasswordRequest( PlayFab::ClientModels::AddUsernamePasswordRequest* request, const char* testName );
    static void FillPlayFabClientAddUsernamePasswordRequest( PlayFab::ClientModels::AddUsernamePasswordRequest* request );
    static HRESULT LogPlayFabClientAddUsernamePasswordResult( PlayFabClientAddUsernamePasswordResult* result );
    static HRESULT ValidatePlayFabClientAddUsernamePasswordResult( PlayFabClientAddUsernamePasswordResult* result );
    static void LogPlayFabClientAddUserVirtualCurrencyRequest( PlayFab::ClientModels::AddUserVirtualCurrencyRequest* request, const char* testName );
    static void FillPlayFabClientAddUserVirtualCurrencyRequest( PlayFab::ClientModels::AddUserVirtualCurrencyRequest* request );
    static HRESULT LogPlayFabClientModifyUserVirtualCurrencyResult( PlayFabClientModifyUserVirtualCurrencyResult* result );
    static HRESULT ValidatePlayFabClientModifyUserVirtualCurrencyResult( PlayFabClientModifyUserVirtualCurrencyResult* result );
    static void LogPlayFabClientAndroidDevicePushNotificationRegistrationRequest( PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationRequest* request, const char* testName );
    static void FillPlayFabClientAndroidDevicePushNotificationRegistrationRequest( PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationRequest* request );
    static void LogPlayFabClientAttributeInstallRequest( PlayFab::ClientModels::AttributeInstallRequest* request, const char* testName );
    static void FillPlayFabClientAttributeInstallRequest( PlayFab::ClientModels::AttributeInstallRequest* request );
    static void LogPlayFabClientCancelTradeRequest( PlayFab::ClientModels::CancelTradeRequest* request, const char* testName );
    static void FillPlayFabClientCancelTradeRequest( PlayFab::ClientModels::CancelTradeRequest* request );
    static HRESULT LogPlayFabClientCancelTradeResponse( PlayFabClientCancelTradeResponse* result );
    static HRESULT ValidatePlayFabClientCancelTradeResponse( PlayFabClientCancelTradeResponse* result );
    static void LogPlayFabClientConfirmPurchaseRequest( PlayFab::ClientModels::ConfirmPurchaseRequest* request, const char* testName );
    static void FillPlayFabClientConfirmPurchaseRequest( PlayFab::ClientModels::ConfirmPurchaseRequest* request );
    static HRESULT LogPlayFabClientConfirmPurchaseResult( PlayFabClientConfirmPurchaseResult* result );
    static HRESULT ValidatePlayFabClientConfirmPurchaseResult( PlayFabClientConfirmPurchaseResult* result );
    static void LogPlayFabClientConsumeItemRequest( PlayFab::ClientModels::ConsumeItemRequest* request, const char* testName );
    static void FillPlayFabClientConsumeItemRequest( PlayFab::ClientModels::ConsumeItemRequest* request );
    static HRESULT LogPlayFabClientConsumeItemResult( PlayFabClientConsumeItemResult* result );
    static HRESULT ValidatePlayFabClientConsumeItemResult( PlayFabClientConsumeItemResult* result );
    static void LogPlayFabClientConsumeMicrosoftStoreEntitlementsRequest( PlayFab::ClientModels::ConsumeMicrosoftStoreEntitlementsRequest* request, const char* testName );
    static void FillPlayFabClientConsumeMicrosoftStoreEntitlementsRequest( PlayFab::ClientModels::ConsumeMicrosoftStoreEntitlementsRequest* request );
    static HRESULT LogPlayFabClientConsumeMicrosoftStoreEntitlementsResponse( PlayFabClientConsumeMicrosoftStoreEntitlementsResponse* result );
    static HRESULT ValidatePlayFabClientConsumeMicrosoftStoreEntitlementsResponse( PlayFabClientConsumeMicrosoftStoreEntitlementsResponse* result );
    static void LogPlayFabClientConsumePS5EntitlementsRequest( PlayFab::ClientModels::ConsumePS5EntitlementsRequest* request, const char* testName );
    static void FillPlayFabClientConsumePS5EntitlementsRequest( PlayFab::ClientModels::ConsumePS5EntitlementsRequest* request );
    static HRESULT LogPlayFabClientConsumePS5EntitlementsResult( PlayFabClientConsumePS5EntitlementsResult* result );
    static HRESULT ValidatePlayFabClientConsumePS5EntitlementsResult( PlayFabClientConsumePS5EntitlementsResult* result );
    static void LogPlayFabClientConsumePSNEntitlementsRequest( PlayFab::ClientModels::ConsumePSNEntitlementsRequest* request, const char* testName );
    static void FillPlayFabClientConsumePSNEntitlementsRequest( PlayFab::ClientModels::ConsumePSNEntitlementsRequest* request );
    static HRESULT LogPlayFabClientConsumePSNEntitlementsResult( PlayFabClientConsumePSNEntitlementsResult* result );
    static HRESULT ValidatePlayFabClientConsumePSNEntitlementsResult( PlayFabClientConsumePSNEntitlementsResult* result );
    static void LogPlayFabClientConsumeXboxEntitlementsRequest( PlayFab::ClientModels::ConsumeXboxEntitlementsRequest* request, const char* testName );
    static void FillPlayFabClientConsumeXboxEntitlementsRequest( PlayFab::ClientModels::ConsumeXboxEntitlementsRequest* request );
    static HRESULT LogPlayFabClientConsumeXboxEntitlementsResult( PlayFabClientConsumeXboxEntitlementsResult* result );
    static HRESULT ValidatePlayFabClientConsumeXboxEntitlementsResult( PlayFabClientConsumeXboxEntitlementsResult* result );
    static void LogPlayFabClientCreateSharedGroupRequest( PlayFab::ClientModels::CreateSharedGroupRequest* request, const char* testName );
    static void FillPlayFabClientCreateSharedGroupRequest( PlayFab::ClientModels::CreateSharedGroupRequest* request );
    static HRESULT LogPlayFabClientCreateSharedGroupResult( PlayFabClientCreateSharedGroupResult* result );
    static HRESULT ValidatePlayFabClientCreateSharedGroupResult( PlayFabClientCreateSharedGroupResult* result );
    static void LogPlayFabClientExecuteCloudScriptRequest( PlayFab::ClientModels::ExecuteCloudScriptRequest* request, const char* testName );
    static void FillPlayFabClientExecuteCloudScriptRequest( PlayFab::ClientModels::ExecuteCloudScriptRequest* request );
    static HRESULT LogPlayFabClientExecuteCloudScriptResult( PlayFabClientExecuteCloudScriptResult* result );
    static HRESULT ValidatePlayFabClientExecuteCloudScriptResult( PlayFabClientExecuteCloudScriptResult* result );
    static void LogPlayFabClientGetAccountInfoRequest( PlayFab::ClientModels::GetAccountInfoRequest* request, const char* testName );
    static void FillPlayFabClientGetAccountInfoRequest( PlayFab::ClientModels::GetAccountInfoRequest* request );
    static HRESULT LogPlayFabClientGetAccountInfoResult( PlayFabClientGetAccountInfoResult* result );
    static HRESULT ValidatePlayFabClientGetAccountInfoResult( PlayFabClientGetAccountInfoResult* result );
    static void LogPlayFabClientGetAdPlacementsRequest( PlayFab::ClientModels::GetAdPlacementsRequest* request, const char* testName );
    static void FillPlayFabClientGetAdPlacementsRequest( PlayFab::ClientModels::GetAdPlacementsRequest* request );
    static HRESULT LogPlayFabClientGetAdPlacementsResult( PlayFabClientGetAdPlacementsResult* result );
    static HRESULT ValidatePlayFabClientGetAdPlacementsResult( PlayFabClientGetAdPlacementsResult* result );
    static void LogPlayFabClientListUsersCharactersRequest( PlayFab::ClientModels::ListUsersCharactersRequest* request, const char* testName );
    static void FillPlayFabClientListUsersCharactersRequest( PlayFab::ClientModels::ListUsersCharactersRequest* request );
    static HRESULT LogPlayFabClientListUsersCharactersResult( PlayFabClientListUsersCharactersResult* result );
    static HRESULT ValidatePlayFabClientListUsersCharactersResult( PlayFabClientListUsersCharactersResult* result );
    static void LogPlayFabClientGetCatalogItemsRequest( PlayFab::ClientModels::GetCatalogItemsRequest* request, const char* testName );
    static void FillPlayFabClientGetCatalogItemsRequest( PlayFab::ClientModels::GetCatalogItemsRequest* request );
    static HRESULT LogPlayFabClientGetCatalogItemsResult( PlayFabClientGetCatalogItemsResult* result );
    static HRESULT ValidatePlayFabClientGetCatalogItemsResult( PlayFabClientGetCatalogItemsResult* result );
    static void LogPlayFabClientGetCharacterDataRequest( PlayFab::ClientModels::GetCharacterDataRequest* request, const char* testName );
    static void FillPlayFabClientGetCharacterDataRequest( PlayFab::ClientModels::GetCharacterDataRequest* request );
    static HRESULT LogPlayFabClientGetCharacterDataResult( PlayFabClientGetCharacterDataResult* result );
    static HRESULT ValidatePlayFabClientGetCharacterDataResult( PlayFabClientGetCharacterDataResult* result );
    static void LogPlayFabClientGetCharacterInventoryRequest( PlayFab::ClientModels::GetCharacterInventoryRequest* request, const char* testName );
    static void FillPlayFabClientGetCharacterInventoryRequest( PlayFab::ClientModels::GetCharacterInventoryRequest* request );
    static HRESULT LogPlayFabClientGetCharacterInventoryResult( PlayFabClientGetCharacterInventoryResult* result );
    static HRESULT ValidatePlayFabClientGetCharacterInventoryResult( PlayFabClientGetCharacterInventoryResult* result );
    static void LogPlayFabClientGetCharacterLeaderboardRequest( PlayFab::ClientModels::GetCharacterLeaderboardRequest* request, const char* testName );
    static void FillPlayFabClientGetCharacterLeaderboardRequest( PlayFab::ClientModels::GetCharacterLeaderboardRequest* request );
    static HRESULT LogPlayFabClientGetCharacterLeaderboardResult( PlayFabClientGetCharacterLeaderboardResult* result );
    static HRESULT ValidatePlayFabClientGetCharacterLeaderboardResult( PlayFabClientGetCharacterLeaderboardResult* result );
    static void LogPlayFabClientGetCharacterStatisticsRequest( PlayFab::ClientModels::GetCharacterStatisticsRequest* request, const char* testName );
    static void FillPlayFabClientGetCharacterStatisticsRequest( PlayFab::ClientModels::GetCharacterStatisticsRequest* request );
    static HRESULT LogPlayFabClientGetCharacterStatisticsResult( PlayFabClientGetCharacterStatisticsResult* result );
    static HRESULT ValidatePlayFabClientGetCharacterStatisticsResult( PlayFabClientGetCharacterStatisticsResult* result );
    static void LogPlayFabClientGetContentDownloadUrlRequest( PlayFab::ClientModels::GetContentDownloadUrlRequest* request, const char* testName );
    static void FillPlayFabClientGetContentDownloadUrlRequest( PlayFab::ClientModels::GetContentDownloadUrlRequest* request );
    static HRESULT LogPlayFabClientGetContentDownloadUrlResult( PlayFabClientGetContentDownloadUrlResult* result );
    static HRESULT ValidatePlayFabClientGetContentDownloadUrlResult( PlayFabClientGetContentDownloadUrlResult* result );
    static void LogPlayFabClientCurrentGamesRequest( PlayFab::ClientModels::CurrentGamesRequest* request, const char* testName );
    static void FillPlayFabClientCurrentGamesRequest( PlayFab::ClientModels::CurrentGamesRequest* request );
    static HRESULT LogPlayFabClientCurrentGamesResult( PlayFabClientCurrentGamesResult* result );
    static HRESULT ValidatePlayFabClientCurrentGamesResult( PlayFabClientCurrentGamesResult* result );
    static void LogPlayFabClientGetFriendLeaderboardRequest( PlayFab::ClientModels::GetFriendLeaderboardRequest* request, const char* testName );
    static void FillPlayFabClientGetFriendLeaderboardRequest( PlayFab::ClientModels::GetFriendLeaderboardRequest* request );
    static HRESULT LogPlayFabClientGetLeaderboardResult( PlayFabClientGetLeaderboardResult* result );
    static HRESULT ValidatePlayFabClientGetLeaderboardResult( PlayFabClientGetLeaderboardResult* result );
    static void LogPlayFabClientGetFriendLeaderboardAroundPlayerRequest( PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerRequest* request, const char* testName );
    static void FillPlayFabClientGetFriendLeaderboardAroundPlayerRequest( PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerRequest* request );
    static HRESULT LogPlayFabClientGetFriendLeaderboardAroundPlayerResult( PlayFabClientGetFriendLeaderboardAroundPlayerResult* result );
    static HRESULT ValidatePlayFabClientGetFriendLeaderboardAroundPlayerResult( PlayFabClientGetFriendLeaderboardAroundPlayerResult* result );
    static void LogPlayFabClientGetFriendsListRequest( PlayFab::ClientModels::GetFriendsListRequest* request, const char* testName );
    static void FillPlayFabClientGetFriendsListRequest( PlayFab::ClientModels::GetFriendsListRequest* request );
    static HRESULT LogPlayFabClientGetFriendsListResult( PlayFabClientGetFriendsListResult* result );
    static HRESULT ValidatePlayFabClientGetFriendsListResult( PlayFabClientGetFriendsListResult* result );
    static void LogPlayFabClientGameServerRegionsRequest( PlayFab::ClientModels::GameServerRegionsRequest* request, const char* testName );
    static void FillPlayFabClientGameServerRegionsRequest( PlayFab::ClientModels::GameServerRegionsRequest* request );
    static HRESULT LogPlayFabClientGameServerRegionsResult( PlayFabClientGameServerRegionsResult* result );
    static HRESULT ValidatePlayFabClientGameServerRegionsResult( PlayFabClientGameServerRegionsResult* result );
    static void LogPlayFabClientGetLeaderboardRequest( PlayFab::ClientModels::GetLeaderboardRequest* request, const char* testName );
    static void FillPlayFabClientGetLeaderboardRequest( PlayFab::ClientModels::GetLeaderboardRequest* request );
    static void LogPlayFabClientGetLeaderboardAroundCharacterRequest( PlayFab::ClientModels::GetLeaderboardAroundCharacterRequest* request, const char* testName );
    static void FillPlayFabClientGetLeaderboardAroundCharacterRequest( PlayFab::ClientModels::GetLeaderboardAroundCharacterRequest* request );
    static HRESULT LogPlayFabClientGetLeaderboardAroundCharacterResult( PlayFabClientGetLeaderboardAroundCharacterResult* result );
    static HRESULT ValidatePlayFabClientGetLeaderboardAroundCharacterResult( PlayFabClientGetLeaderboardAroundCharacterResult* result );
    static void LogPlayFabClientGetLeaderboardAroundPlayerRequest( PlayFab::ClientModels::GetLeaderboardAroundPlayerRequest* request, const char* testName );
    static void FillPlayFabClientGetLeaderboardAroundPlayerRequest( PlayFab::ClientModels::GetLeaderboardAroundPlayerRequest* request );
    static HRESULT LogPlayFabClientGetLeaderboardAroundPlayerResult( PlayFabClientGetLeaderboardAroundPlayerResult* result );
    static HRESULT ValidatePlayFabClientGetLeaderboardAroundPlayerResult( PlayFabClientGetLeaderboardAroundPlayerResult* result );
    static void LogPlayFabClientGetLeaderboardForUsersCharactersRequest( PlayFab::ClientModels::GetLeaderboardForUsersCharactersRequest* request, const char* testName );
    static void FillPlayFabClientGetLeaderboardForUsersCharactersRequest( PlayFab::ClientModels::GetLeaderboardForUsersCharactersRequest* request );
    static HRESULT LogPlayFabClientGetLeaderboardForUsersCharactersResult( PlayFabClientGetLeaderboardForUsersCharactersResult* result );
    static HRESULT ValidatePlayFabClientGetLeaderboardForUsersCharactersResult( PlayFabClientGetLeaderboardForUsersCharactersResult* result );
    static void LogPlayFabClientGetPaymentTokenRequest( PlayFab::ClientModels::GetPaymentTokenRequest* request, const char* testName );
    static void FillPlayFabClientGetPaymentTokenRequest( PlayFab::ClientModels::GetPaymentTokenRequest* request );
    static HRESULT LogPlayFabClientGetPaymentTokenResult( PlayFabClientGetPaymentTokenResult* result );
    static HRESULT ValidatePlayFabClientGetPaymentTokenResult( PlayFabClientGetPaymentTokenResult* result );
    static void LogPlayFabClientGetPhotonAuthenticationTokenRequest( PlayFab::ClientModels::GetPhotonAuthenticationTokenRequest* request, const char* testName );
    static void FillPlayFabClientGetPhotonAuthenticationTokenRequest( PlayFab::ClientModels::GetPhotonAuthenticationTokenRequest* request );
    static HRESULT LogPlayFabClientGetPhotonAuthenticationTokenResult( PlayFabClientGetPhotonAuthenticationTokenResult* result );
    static HRESULT ValidatePlayFabClientGetPhotonAuthenticationTokenResult( PlayFabClientGetPhotonAuthenticationTokenResult* result );
    static void LogPlayFabClientGetPlayerCombinedInfoRequest( PlayFab::ClientModels::GetPlayerCombinedInfoRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerCombinedInfoRequest( PlayFab::ClientModels::GetPlayerCombinedInfoRequest* request );
    static HRESULT LogPlayFabClientGetPlayerCombinedInfoResult( PlayFabClientGetPlayerCombinedInfoResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerCombinedInfoResult( PlayFabClientGetPlayerCombinedInfoResult* result );
    static void LogPlayFabClientGetPlayerProfileRequest( PlayFab::ClientModels::GetPlayerProfileRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerProfileRequest( PlayFab::ClientModels::GetPlayerProfileRequest* request );
    static HRESULT LogPlayFabClientGetPlayerProfileResult( PlayFabClientGetPlayerProfileResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerProfileResult( PlayFabClientGetPlayerProfileResult* result );
    static HRESULT LogPlayFabClientGetPlayerSegmentsResult( PlayFabClientGetPlayerSegmentsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerSegmentsResult( PlayFabClientGetPlayerSegmentsResult* result );
    static void LogPlayFabClientGetPlayerStatisticsRequest( PlayFab::ClientModels::GetPlayerStatisticsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerStatisticsRequest( PlayFab::ClientModels::GetPlayerStatisticsRequest* request );
    static HRESULT LogPlayFabClientGetPlayerStatisticsResult( PlayFabClientGetPlayerStatisticsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerStatisticsResult( PlayFabClientGetPlayerStatisticsResult* result );
    static void LogPlayFabClientGetPlayerStatisticVersionsRequest( PlayFab::ClientModels::GetPlayerStatisticVersionsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerStatisticVersionsRequest( PlayFab::ClientModels::GetPlayerStatisticVersionsRequest* request );
    static HRESULT LogPlayFabClientGetPlayerStatisticVersionsResult( PlayFabClientGetPlayerStatisticVersionsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerStatisticVersionsResult( PlayFabClientGetPlayerStatisticVersionsResult* result );
    static void LogPlayFabClientGetPlayerTagsRequest( PlayFab::ClientModels::GetPlayerTagsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerTagsRequest( PlayFab::ClientModels::GetPlayerTagsRequest* request );
    static HRESULT LogPlayFabClientGetPlayerTagsResult( PlayFabClientGetPlayerTagsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayerTagsResult( PlayFabClientGetPlayerTagsResult* result );
    static void LogPlayFabClientGetPlayerTradesRequest( PlayFab::ClientModels::GetPlayerTradesRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayerTradesRequest( PlayFab::ClientModels::GetPlayerTradesRequest* request );
    static HRESULT LogPlayFabClientGetPlayerTradesResponse( PlayFabClientGetPlayerTradesResponse* result );
    static HRESULT ValidatePlayFabClientGetPlayerTradesResponse( PlayFabClientGetPlayerTradesResponse* result );
    static void LogPlayFabClientGetPlayFabIDsFromFacebookIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromFacebookIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromFacebookIDsResult( PlayFabClientGetPlayFabIDsFromFacebookIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromFacebookIDsResult( PlayFabClientGetPlayFabIDsFromFacebookIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest( PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest( PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsResult( PlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsResult( PlayFabClientGetPlayFabIDsFromFacebookInstantGamesIdsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromGameCenterIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromGameCenterIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromGameCenterIDsResult( PlayFabClientGetPlayFabIDsFromGameCenterIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromGameCenterIDsResult( PlayFabClientGetPlayFabIDsFromGameCenterIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromGenericIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromGenericIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromGenericIDsResult( PlayFabClientGetPlayFabIDsFromGenericIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromGenericIDsResult( PlayFabClientGetPlayFabIDsFromGenericIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromGoogleIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromGoogleIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromGoogleIDsResult( PlayFabClientGetPlayFabIDsFromGoogleIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromGoogleIDsResult( PlayFabClientGetPlayFabIDsFromGoogleIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromKongregateIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromKongregateIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromKongregateIDsResult( PlayFabClientGetPlayFabIDsFromKongregateIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromKongregateIDsResult( PlayFabClientGetPlayFabIDsFromKongregateIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest( PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest( PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult( PlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult( PlayFabClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromPSNAccountIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromPSNAccountIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromPSNAccountIDsResult( PlayFabClientGetPlayFabIDsFromPSNAccountIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromPSNAccountIDsResult( PlayFabClientGetPlayFabIDsFromPSNAccountIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromSteamIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromSteamIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromSteamIDsResult( PlayFabClientGetPlayFabIDsFromSteamIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromSteamIDsResult( PlayFabClientGetPlayFabIDsFromSteamIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromTwitchIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromTwitchIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromTwitchIDsResult( PlayFabClientGetPlayFabIDsFromTwitchIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromTwitchIDsResult( PlayFabClientGetPlayFabIDsFromTwitchIDsResult* result );
    static void LogPlayFabClientGetPlayFabIDsFromXboxLiveIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsRequest* request, const char* testName );
    static void FillPlayFabClientGetPlayFabIDsFromXboxLiveIDsRequest( PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsRequest* request );
    static HRESULT LogPlayFabClientGetPlayFabIDsFromXboxLiveIDsResult( PlayFabClientGetPlayFabIDsFromXboxLiveIDsResult* result );
    static HRESULT ValidatePlayFabClientGetPlayFabIDsFromXboxLiveIDsResult( PlayFabClientGetPlayFabIDsFromXboxLiveIDsResult* result );
    static void LogPlayFabClientGetPublisherDataRequest( PlayFab::ClientModels::GetPublisherDataRequest* request, const char* testName );
    static void FillPlayFabClientGetPublisherDataRequest( PlayFab::ClientModels::GetPublisherDataRequest* request );
    static HRESULT LogPlayFabClientGetPublisherDataResult( PlayFabClientGetPublisherDataResult* result );
    static HRESULT ValidatePlayFabClientGetPublisherDataResult( PlayFabClientGetPublisherDataResult* result );
    static void LogPlayFabClientGetPurchaseRequest( PlayFab::ClientModels::GetPurchaseRequest* request, const char* testName );
    static void FillPlayFabClientGetPurchaseRequest( PlayFab::ClientModels::GetPurchaseRequest* request );
    static HRESULT LogPlayFabClientGetPurchaseResult( PlayFabClientGetPurchaseResult* result );
    static HRESULT ValidatePlayFabClientGetPurchaseResult( PlayFabClientGetPurchaseResult* result );
    static void LogPlayFabClientGetSharedGroupDataRequest( PlayFab::ClientModels::GetSharedGroupDataRequest* request, const char* testName );
    static void FillPlayFabClientGetSharedGroupDataRequest( PlayFab::ClientModels::GetSharedGroupDataRequest* request );
    static HRESULT LogPlayFabClientGetSharedGroupDataResult( PlayFabClientGetSharedGroupDataResult* result );
    static HRESULT ValidatePlayFabClientGetSharedGroupDataResult( PlayFabClientGetSharedGroupDataResult* result );
    static void LogPlayFabClientGetStoreItemsRequest( PlayFab::ClientModels::GetStoreItemsRequest* request, const char* testName );
    static void FillPlayFabClientGetStoreItemsRequest( PlayFab::ClientModels::GetStoreItemsRequest* request );
    static HRESULT LogPlayFabClientGetStoreItemsResult( PlayFabClientGetStoreItemsResult* result );
    static HRESULT ValidatePlayFabClientGetStoreItemsResult( PlayFabClientGetStoreItemsResult* result );
    static HRESULT LogPlayFabClientGetTimeResult( PlayFabClientGetTimeResult* result );
    static HRESULT ValidatePlayFabClientGetTimeResult( PlayFabClientGetTimeResult* result );
    static void LogPlayFabClientGetTitleDataRequest( PlayFab::ClientModels::GetTitleDataRequest* request, const char* testName );
    static void FillPlayFabClientGetTitleDataRequest( PlayFab::ClientModels::GetTitleDataRequest* request );
    static HRESULT LogPlayFabClientGetTitleDataResult( PlayFabClientGetTitleDataResult* result );
    static HRESULT ValidatePlayFabClientGetTitleDataResult( PlayFabClientGetTitleDataResult* result );
    static void LogPlayFabClientGetTitleNewsRequest( PlayFab::ClientModels::GetTitleNewsRequest* request, const char* testName );
    static void FillPlayFabClientGetTitleNewsRequest( PlayFab::ClientModels::GetTitleNewsRequest* request );
    static HRESULT LogPlayFabClientGetTitleNewsResult( PlayFabClientGetTitleNewsResult* result );
    static HRESULT ValidatePlayFabClientGetTitleNewsResult( PlayFabClientGetTitleNewsResult* result );
    static void LogPlayFabClientGetTitlePublicKeyRequest( PlayFab::ClientModels::GetTitlePublicKeyRequest* request, const char* testName );
    static void FillPlayFabClientGetTitlePublicKeyRequest( PlayFab::ClientModels::GetTitlePublicKeyRequest* request );
    static HRESULT LogPlayFabClientGetTitlePublicKeyResult( PlayFabClientGetTitlePublicKeyResult* result );
    static HRESULT ValidatePlayFabClientGetTitlePublicKeyResult( PlayFabClientGetTitlePublicKeyResult* result );
    static void LogPlayFabClientGetTradeStatusRequest( PlayFab::ClientModels::GetTradeStatusRequest* request, const char* testName );
    static void FillPlayFabClientGetTradeStatusRequest( PlayFab::ClientModels::GetTradeStatusRequest* request );
    static HRESULT LogPlayFabClientGetTradeStatusResponse( PlayFabClientGetTradeStatusResponse* result );
    static HRESULT ValidatePlayFabClientGetTradeStatusResponse( PlayFabClientGetTradeStatusResponse* result );
    static void LogPlayFabClientGetUserDataRequest( PlayFab::ClientModels::GetUserDataRequest* request, const char* testName );
    static void FillPlayFabClientGetUserDataRequest( PlayFab::ClientModels::GetUserDataRequest* request );
    static HRESULT LogPlayFabClientGetUserDataResult( PlayFabClientGetUserDataResult* result );
    static HRESULT ValidatePlayFabClientGetUserDataResult( PlayFabClientGetUserDataResult* result );
    static void LogPlayFabClientGetUserInventoryRequest( PlayFab::ClientModels::GetUserInventoryRequest* request, const char* testName );
    static void FillPlayFabClientGetUserInventoryRequest( PlayFab::ClientModels::GetUserInventoryRequest* request );
    static HRESULT LogPlayFabClientGetUserInventoryResult( PlayFabClientGetUserInventoryResult* result );
    static HRESULT ValidatePlayFabClientGetUserInventoryResult( PlayFabClientGetUserInventoryResult* result );
    static void LogPlayFabClientGrantCharacterToUserRequest( PlayFab::ClientModels::GrantCharacterToUserRequest* request, const char* testName );
    static void FillPlayFabClientGrantCharacterToUserRequest( PlayFab::ClientModels::GrantCharacterToUserRequest* request );
    static HRESULT LogPlayFabClientGrantCharacterToUserResult( PlayFabClientGrantCharacterToUserResult* result );
    static HRESULT ValidatePlayFabClientGrantCharacterToUserResult( PlayFabClientGrantCharacterToUserResult* result );
    static void LogPlayFabClientLinkAndroidDeviceIDRequest( PlayFab::ClientModels::LinkAndroidDeviceIDRequest* request, const char* testName );
    static void FillPlayFabClientLinkAndroidDeviceIDRequest( PlayFab::ClientModels::LinkAndroidDeviceIDRequest* request );
    static void LogPlayFabClientLinkAppleRequest( PlayFab::ClientModels::LinkAppleRequest* request, const char* testName );
    static void FillPlayFabClientLinkAppleRequest( PlayFab::ClientModels::LinkAppleRequest* request );
    static void LogPlayFabClientLinkCustomIDRequest( PlayFab::ClientModels::LinkCustomIDRequest* request, const char* testName );
    static void FillPlayFabClientLinkCustomIDRequest( PlayFab::ClientModels::LinkCustomIDRequest* request );
    static void LogPlayFabClientLinkFacebookAccountRequest( PlayFab::ClientModels::LinkFacebookAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkFacebookAccountRequest( PlayFab::ClientModels::LinkFacebookAccountRequest* request );
    static void LogPlayFabClientLinkFacebookInstantGamesIdRequest( PlayFab::ClientModels::LinkFacebookInstantGamesIdRequest* request, const char* testName );
    static void FillPlayFabClientLinkFacebookInstantGamesIdRequest( PlayFab::ClientModels::LinkFacebookInstantGamesIdRequest* request );
    static void LogPlayFabClientLinkGameCenterAccountRequest( PlayFab::ClientModels::LinkGameCenterAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkGameCenterAccountRequest( PlayFab::ClientModels::LinkGameCenterAccountRequest* request );
    static void LogPlayFabClientLinkGoogleAccountRequest( PlayFab::ClientModels::LinkGoogleAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkGoogleAccountRequest( PlayFab::ClientModels::LinkGoogleAccountRequest* request );
    static void LogPlayFabClientLinkIOSDeviceIDRequest( PlayFab::ClientModels::LinkIOSDeviceIDRequest* request, const char* testName );
    static void FillPlayFabClientLinkIOSDeviceIDRequest( PlayFab::ClientModels::LinkIOSDeviceIDRequest* request );
    static void LogPlayFabClientLinkKongregateAccountRequest( PlayFab::ClientModels::LinkKongregateAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkKongregateAccountRequest( PlayFab::ClientModels::LinkKongregateAccountRequest* request );
    static void LogPlayFabClientLinkNintendoServiceAccountRequest( PlayFab::ClientModels::LinkNintendoServiceAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkNintendoServiceAccountRequest( PlayFab::ClientModels::LinkNintendoServiceAccountRequest* request );
    static void LogPlayFabClientLinkNintendoSwitchDeviceIdRequest( PlayFab::ClientModels::LinkNintendoSwitchDeviceIdRequest* request, const char* testName );
    static void FillPlayFabClientLinkNintendoSwitchDeviceIdRequest( PlayFab::ClientModels::LinkNintendoSwitchDeviceIdRequest* request );
    static void LogPlayFabClientLinkOpenIdConnectRequest( PlayFab::ClientModels::LinkOpenIdConnectRequest* request, const char* testName );
    static void FillPlayFabClientLinkOpenIdConnectRequest( PlayFab::ClientModels::LinkOpenIdConnectRequest* request );
    static void LogPlayFabClientLinkPSNAccountRequest( PlayFab::ClientModels::LinkPSNAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkPSNAccountRequest( PlayFab::ClientModels::LinkPSNAccountRequest* request );
    static void LogPlayFabClientLinkSteamAccountRequest( PlayFab::ClientModels::LinkSteamAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkSteamAccountRequest( PlayFab::ClientModels::LinkSteamAccountRequest* request );
    static void LogPlayFabClientLinkTwitchAccountRequest( PlayFab::ClientModels::LinkTwitchAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkTwitchAccountRequest( PlayFab::ClientModels::LinkTwitchAccountRequest* request );
    static void LogPlayFabClientLinkXboxAccountRequest( PlayFab::ClientModels::LinkXboxAccountRequest* request, const char* testName );
    static void FillPlayFabClientLinkXboxAccountRequest( PlayFab::ClientModels::LinkXboxAccountRequest* request );
    static void LogPlayFabClientMatchmakeRequest( PlayFab::ClientModels::MatchmakeRequest* request, const char* testName );
    static void FillPlayFabClientMatchmakeRequest( PlayFab::ClientModels::MatchmakeRequest* request );
    static HRESULT LogPlayFabClientMatchmakeResult( PlayFabClientMatchmakeResult* result );
    static HRESULT ValidatePlayFabClientMatchmakeResult( PlayFabClientMatchmakeResult* result );
    static void LogPlayFabClientOpenTradeRequest( PlayFab::ClientModels::OpenTradeRequest* request, const char* testName );
    static void FillPlayFabClientOpenTradeRequest( PlayFab::ClientModels::OpenTradeRequest* request );
    static HRESULT LogPlayFabClientOpenTradeResponse( PlayFabClientOpenTradeResponse* result );
    static HRESULT ValidatePlayFabClientOpenTradeResponse( PlayFabClientOpenTradeResponse* result );
    static void LogPlayFabClientPayForPurchaseRequest( PlayFab::ClientModels::PayForPurchaseRequest* request, const char* testName );
    static void FillPlayFabClientPayForPurchaseRequest( PlayFab::ClientModels::PayForPurchaseRequest* request );
    static HRESULT LogPlayFabClientPayForPurchaseResult( PlayFabClientPayForPurchaseResult* result );
    static HRESULT ValidatePlayFabClientPayForPurchaseResult( PlayFabClientPayForPurchaseResult* result );
    static void LogPlayFabClientPurchaseItemRequest( PlayFab::ClientModels::PurchaseItemRequest* request, const char* testName );
    static void FillPlayFabClientPurchaseItemRequest( PlayFab::ClientModels::PurchaseItemRequest* request );
    static HRESULT LogPlayFabClientPurchaseItemResult( PlayFabClientPurchaseItemResult* result );
    static HRESULT ValidatePlayFabClientPurchaseItemResult( PlayFabClientPurchaseItemResult* result );
    static void LogPlayFabClientRedeemCouponRequest( PlayFab::ClientModels::RedeemCouponRequest* request, const char* testName );
    static void FillPlayFabClientRedeemCouponRequest( PlayFab::ClientModels::RedeemCouponRequest* request );
    static HRESULT LogPlayFabClientRedeemCouponResult( PlayFabClientRedeemCouponResult* result );
    static HRESULT ValidatePlayFabClientRedeemCouponResult( PlayFabClientRedeemCouponResult* result );
    static void LogPlayFabClientRefreshPSNAuthTokenRequest( PlayFab::ClientModels::RefreshPSNAuthTokenRequest* request, const char* testName );
    static void FillPlayFabClientRefreshPSNAuthTokenRequest( PlayFab::ClientModels::RefreshPSNAuthTokenRequest* request );
    static void LogPlayFabClientRegisterForIOSPushNotificationRequest( PlayFab::ClientModels::RegisterForIOSPushNotificationRequest* request, const char* testName );
    static void FillPlayFabClientRegisterForIOSPushNotificationRequest( PlayFab::ClientModels::RegisterForIOSPushNotificationRequest* request );
    static void LogPlayFabClientRemoveContactEmailRequest( PlayFab::ClientModels::RemoveContactEmailRequest* request, const char* testName );
    static void FillPlayFabClientRemoveContactEmailRequest( PlayFab::ClientModels::RemoveContactEmailRequest* request );
    static void LogPlayFabClientRemoveFriendRequest( PlayFab::ClientModels::RemoveFriendRequest* request, const char* testName );
    static void FillPlayFabClientRemoveFriendRequest( PlayFab::ClientModels::RemoveFriendRequest* request );
    static void LogPlayFabClientRemoveGenericIDRequest( PlayFab::ClientModels::RemoveGenericIDRequest* request, const char* testName );
    static void FillPlayFabClientRemoveGenericIDRequest( PlayFab::ClientModels::RemoveGenericIDRequest* request );
    static void LogPlayFabClientRemoveSharedGroupMembersRequest( PlayFab::ClientModels::RemoveSharedGroupMembersRequest* request, const char* testName );
    static void FillPlayFabClientRemoveSharedGroupMembersRequest( PlayFab::ClientModels::RemoveSharedGroupMembersRequest* request );
    static void LogPlayFabClientReportAdActivityRequest( PlayFab::ClientModels::ReportAdActivityRequest* request, const char* testName );
    static void FillPlayFabClientReportAdActivityRequest( PlayFab::ClientModels::ReportAdActivityRequest* request );
    static void LogPlayFabClientDeviceInfoRequest( PlayFab::ClientModels::DeviceInfoRequest* request, const char* testName );
    static void FillPlayFabClientDeviceInfoRequest( PlayFab::ClientModels::DeviceInfoRequest* request );
    static void LogPlayFabClientReportPlayerClientRequest( PlayFab::ClientModels::ReportPlayerClientRequest* request, const char* testName );
    static void FillPlayFabClientReportPlayerClientRequest( PlayFab::ClientModels::ReportPlayerClientRequest* request );
    static HRESULT LogPlayFabClientReportPlayerClientResult( PlayFabClientReportPlayerClientResult* result );
    static HRESULT ValidatePlayFabClientReportPlayerClientResult( PlayFabClientReportPlayerClientResult* result );
    static void LogPlayFabClientRestoreIOSPurchasesRequest( PlayFab::ClientModels::RestoreIOSPurchasesRequest* request, const char* testName );
    static void FillPlayFabClientRestoreIOSPurchasesRequest( PlayFab::ClientModels::RestoreIOSPurchasesRequest* request );
    static HRESULT LogPlayFabClientRestoreIOSPurchasesResult( PlayFabClientRestoreIOSPurchasesResult* result );
    static HRESULT ValidatePlayFabClientRestoreIOSPurchasesResult( PlayFabClientRestoreIOSPurchasesResult* result );
    static void LogPlayFabClientRewardAdActivityRequest( PlayFab::ClientModels::RewardAdActivityRequest* request, const char* testName );
    static void FillPlayFabClientRewardAdActivityRequest( PlayFab::ClientModels::RewardAdActivityRequest* request );
    static HRESULT LogPlayFabClientRewardAdActivityResult( PlayFabClientRewardAdActivityResult* result );
    static HRESULT ValidatePlayFabClientRewardAdActivityResult( PlayFabClientRewardAdActivityResult* result );
    static void LogPlayFabClientSendAccountRecoveryEmailRequest( PlayFab::ClientModels::SendAccountRecoveryEmailRequest* request, const char* testName );
    static void FillPlayFabClientSendAccountRecoveryEmailRequest( PlayFab::ClientModels::SendAccountRecoveryEmailRequest* request );
    static void LogPlayFabClientSetFriendTagsRequest( PlayFab::ClientModels::SetFriendTagsRequest* request, const char* testName );
    static void FillPlayFabClientSetFriendTagsRequest( PlayFab::ClientModels::SetFriendTagsRequest* request );
    static void LogPlayFabClientSetPlayerSecretRequest( PlayFab::ClientModels::SetPlayerSecretRequest* request, const char* testName );
    static void FillPlayFabClientSetPlayerSecretRequest( PlayFab::ClientModels::SetPlayerSecretRequest* request );
    static void LogPlayFabClientStartGameRequest( PlayFab::ClientModels::StartGameRequest* request, const char* testName );
    static void FillPlayFabClientStartGameRequest( PlayFab::ClientModels::StartGameRequest* request );
    static HRESULT LogPlayFabClientStartGameResult( PlayFabClientStartGameResult* result );
    static HRESULT ValidatePlayFabClientStartGameResult( PlayFabClientStartGameResult* result );
    static void LogPlayFabClientStartPurchaseRequest( PlayFab::ClientModels::StartPurchaseRequest* request, const char* testName );
    static void FillPlayFabClientStartPurchaseRequest( PlayFab::ClientModels::StartPurchaseRequest* request );
    static HRESULT LogPlayFabClientStartPurchaseResult( PlayFabClientStartPurchaseResult* result );
    static HRESULT ValidatePlayFabClientStartPurchaseResult( PlayFabClientStartPurchaseResult* result );
    static void LogPlayFabClientSubtractUserVirtualCurrencyRequest( PlayFab::ClientModels::SubtractUserVirtualCurrencyRequest* request, const char* testName );
    static void FillPlayFabClientSubtractUserVirtualCurrencyRequest( PlayFab::ClientModels::SubtractUserVirtualCurrencyRequest* request );
    static void LogPlayFabClientUnlinkAndroidDeviceIDRequest( PlayFab::ClientModels::UnlinkAndroidDeviceIDRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkAndroidDeviceIDRequest( PlayFab::ClientModels::UnlinkAndroidDeviceIDRequest* request );
    static void LogPlayFabClientUnlinkAppleRequest( PlayFab::ClientModels::UnlinkAppleRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkAppleRequest( PlayFab::ClientModels::UnlinkAppleRequest* request );
    static void LogPlayFabClientUnlinkCustomIDRequest( PlayFab::ClientModels::UnlinkCustomIDRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkCustomIDRequest( PlayFab::ClientModels::UnlinkCustomIDRequest* request );
    static void LogPlayFabClientUnlinkFacebookAccountRequest( PlayFab::ClientModels::UnlinkFacebookAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkFacebookAccountRequest( PlayFab::ClientModels::UnlinkFacebookAccountRequest* request );
    static void LogPlayFabClientUnlinkFacebookInstantGamesIdRequest( PlayFab::ClientModels::UnlinkFacebookInstantGamesIdRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkFacebookInstantGamesIdRequest( PlayFab::ClientModels::UnlinkFacebookInstantGamesIdRequest* request );
    static void LogPlayFabClientUnlinkGameCenterAccountRequest( PlayFab::ClientModels::UnlinkGameCenterAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkGameCenterAccountRequest( PlayFab::ClientModels::UnlinkGameCenterAccountRequest* request );
    static void LogPlayFabClientUnlinkGoogleAccountRequest( PlayFab::ClientModels::UnlinkGoogleAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkGoogleAccountRequest( PlayFab::ClientModels::UnlinkGoogleAccountRequest* request );
    static void LogPlayFabClientUnlinkIOSDeviceIDRequest( PlayFab::ClientModels::UnlinkIOSDeviceIDRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkIOSDeviceIDRequest( PlayFab::ClientModels::UnlinkIOSDeviceIDRequest* request );
    static void LogPlayFabClientUnlinkKongregateAccountRequest( PlayFab::ClientModels::UnlinkKongregateAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkKongregateAccountRequest( PlayFab::ClientModels::UnlinkKongregateAccountRequest* request );
    static void LogPlayFabClientUnlinkNintendoServiceAccountRequest( PlayFab::ClientModels::UnlinkNintendoServiceAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkNintendoServiceAccountRequest( PlayFab::ClientModels::UnlinkNintendoServiceAccountRequest* request );
    static void LogPlayFabClientUnlinkNintendoSwitchDeviceIdRequest( PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkNintendoSwitchDeviceIdRequest( PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdRequest* request );
    static void LogPlayFabClientUnlinkOpenIdConnectRequest( PlayFab::ClientModels::UnlinkOpenIdConnectRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkOpenIdConnectRequest( PlayFab::ClientModels::UnlinkOpenIdConnectRequest* request );
    static void LogPlayFabClientUnlinkPSNAccountRequest( PlayFab::ClientModels::UnlinkPSNAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkPSNAccountRequest( PlayFab::ClientModels::UnlinkPSNAccountRequest* request );
    static void LogPlayFabClientUnlinkSteamAccountRequest( PlayFab::ClientModels::UnlinkSteamAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkSteamAccountRequest( PlayFab::ClientModels::UnlinkSteamAccountRequest* request );
    static void LogPlayFabClientUnlinkTwitchAccountRequest( PlayFab::ClientModels::UnlinkTwitchAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkTwitchAccountRequest( PlayFab::ClientModels::UnlinkTwitchAccountRequest* request );
    static void LogPlayFabClientUnlinkXboxAccountRequest( PlayFab::ClientModels::UnlinkXboxAccountRequest* request, const char* testName );
    static void FillPlayFabClientUnlinkXboxAccountRequest( PlayFab::ClientModels::UnlinkXboxAccountRequest* request );
    static void LogPlayFabClientUnlockContainerInstanceRequest( PlayFab::ClientModels::UnlockContainerInstanceRequest* request, const char* testName );
    static void FillPlayFabClientUnlockContainerInstanceRequest( PlayFab::ClientModels::UnlockContainerInstanceRequest* request );
    static HRESULT LogPlayFabClientUnlockContainerItemResult( PlayFabClientUnlockContainerItemResult* result );
    static HRESULT ValidatePlayFabClientUnlockContainerItemResult( PlayFabClientUnlockContainerItemResult* result );
    static void LogPlayFabClientUnlockContainerItemRequest( PlayFab::ClientModels::UnlockContainerItemRequest* request, const char* testName );
    static void FillPlayFabClientUnlockContainerItemRequest( PlayFab::ClientModels::UnlockContainerItemRequest* request );
    static void LogPlayFabClientUpdateAvatarUrlRequest( PlayFab::ClientModels::UpdateAvatarUrlRequest* request, const char* testName );
    static void FillPlayFabClientUpdateAvatarUrlRequest( PlayFab::ClientModels::UpdateAvatarUrlRequest* request );
    static void LogPlayFabClientUpdateCharacterDataRequest( PlayFab::ClientModels::UpdateCharacterDataRequest* request, const char* testName );
    static void FillPlayFabClientUpdateCharacterDataRequest( PlayFab::ClientModels::UpdateCharacterDataRequest* request );
    static HRESULT LogPlayFabClientUpdateCharacterDataResult( PlayFabClientUpdateCharacterDataResult* result );
    static HRESULT ValidatePlayFabClientUpdateCharacterDataResult( PlayFabClientUpdateCharacterDataResult* result );
    static void LogPlayFabClientUpdateCharacterStatisticsRequest( PlayFab::ClientModels::UpdateCharacterStatisticsRequest* request, const char* testName );
    static void FillPlayFabClientUpdateCharacterStatisticsRequest( PlayFab::ClientModels::UpdateCharacterStatisticsRequest* request );
    static void LogPlayFabClientUpdatePlayerStatisticsRequest( PlayFab::ClientModels::UpdatePlayerStatisticsRequest* request, const char* testName );
    static void FillPlayFabClientUpdatePlayerStatisticsRequest( PlayFab::ClientModels::UpdatePlayerStatisticsRequest* request );
    static void LogPlayFabClientUpdateSharedGroupDataRequest( PlayFab::ClientModels::UpdateSharedGroupDataRequest* request, const char* testName );
    static void FillPlayFabClientUpdateSharedGroupDataRequest( PlayFab::ClientModels::UpdateSharedGroupDataRequest* request );
    static void LogPlayFabClientUpdateUserDataRequest( PlayFab::ClientModels::UpdateUserDataRequest* request, const char* testName );
    static void FillPlayFabClientUpdateUserDataRequest( PlayFab::ClientModels::UpdateUserDataRequest* request );
    static HRESULT LogPlayFabClientUpdateUserDataResult( PlayFabClientUpdateUserDataResult* result );
    static HRESULT ValidatePlayFabClientUpdateUserDataResult( PlayFabClientUpdateUserDataResult* result );
    static void LogPlayFabClientUpdateUserTitleDisplayNameRequest( PlayFab::ClientModels::UpdateUserTitleDisplayNameRequest* request, const char* testName );
    static void FillPlayFabClientUpdateUserTitleDisplayNameRequest( PlayFab::ClientModels::UpdateUserTitleDisplayNameRequest* request );
    static HRESULT LogPlayFabClientUpdateUserTitleDisplayNameResult( PlayFabClientUpdateUserTitleDisplayNameResult* result );
    static HRESULT ValidatePlayFabClientUpdateUserTitleDisplayNameResult( PlayFabClientUpdateUserTitleDisplayNameResult* result );
    static void LogPlayFabClientValidateAmazonReceiptRequest( PlayFab::ClientModels::ValidateAmazonReceiptRequest* request, const char* testName );
    static void FillPlayFabClientValidateAmazonReceiptRequest( PlayFab::ClientModels::ValidateAmazonReceiptRequest* request );
    static HRESULT LogPlayFabClientValidateAmazonReceiptResult( PlayFabClientValidateAmazonReceiptResult* result );
    static HRESULT ValidatePlayFabClientValidateAmazonReceiptResult( PlayFabClientValidateAmazonReceiptResult* result );
    static void LogPlayFabClientValidateGooglePlayPurchaseRequest( PlayFab::ClientModels::ValidateGooglePlayPurchaseRequest* request, const char* testName );
    static void FillPlayFabClientValidateGooglePlayPurchaseRequest( PlayFab::ClientModels::ValidateGooglePlayPurchaseRequest* request );
    static HRESULT LogPlayFabClientValidateGooglePlayPurchaseResult( PlayFabClientValidateGooglePlayPurchaseResult* result );
    static HRESULT ValidatePlayFabClientValidateGooglePlayPurchaseResult( PlayFabClientValidateGooglePlayPurchaseResult* result );
    static void LogPlayFabClientValidateIOSReceiptRequest( PlayFab::ClientModels::ValidateIOSReceiptRequest* request, const char* testName );
    static void FillPlayFabClientValidateIOSReceiptRequest( PlayFab::ClientModels::ValidateIOSReceiptRequest* request );
    static HRESULT LogPlayFabClientValidateIOSReceiptResult( PlayFabClientValidateIOSReceiptResult* result );
    static HRESULT ValidatePlayFabClientValidateIOSReceiptResult( PlayFabClientValidateIOSReceiptResult* result );
    static void LogPlayFabClientValidateWindowsReceiptRequest( PlayFab::ClientModels::ValidateWindowsReceiptRequest* request, const char* testName );
    static void FillPlayFabClientValidateWindowsReceiptRequest( PlayFab::ClientModels::ValidateWindowsReceiptRequest* request );
    static HRESULT LogPlayFabClientValidateWindowsReceiptResult( PlayFabClientValidateWindowsReceiptResult* result );
    static HRESULT ValidatePlayFabClientValidateWindowsReceiptResult( PlayFabClientValidateWindowsReceiptResult* result );
    static void LogPlayFabClientWriteClientCharacterEventRequest( PlayFab::ClientModels::WriteClientCharacterEventRequest* request, const char* testName );
    static void FillPlayFabClientWriteClientCharacterEventRequest( PlayFab::ClientModels::WriteClientCharacterEventRequest* request );
    static HRESULT LogPlayFabClientWriteEventResponse( PlayFabClientWriteEventResponse* result );
    static HRESULT ValidatePlayFabClientWriteEventResponse( PlayFabClientWriteEventResponse* result );
    static void LogPlayFabClientWriteClientPlayerEventRequest( PlayFab::ClientModels::WriteClientPlayerEventRequest* request, const char* testName );
    static void FillPlayFabClientWriteClientPlayerEventRequest( PlayFab::ClientModels::WriteClientPlayerEventRequest* request );
    static void LogPlayFabClientWriteTitleEventRequest( PlayFab::ClientModels::WriteTitleEventRequest* request, const char* testName );
    static void FillPlayFabClientWriteTitleEventRequest( PlayFab::ClientModels::WriteTitleEventRequest* request );


public:
    PlayFabStateHandle stateHandle{ nullptr };
    PlayFabEntityHandle entityHandle{ nullptr };
    PlayFabGetPlayerCombinedInfoResultPayload const* playerCombinedInfo{ nullptr };

    void ClassSetUp() override;
    void ClassTearDown() override;
    void SetUp(TestContext& testContext) override;

    void Tick(TestContext&) override {}
};

}
